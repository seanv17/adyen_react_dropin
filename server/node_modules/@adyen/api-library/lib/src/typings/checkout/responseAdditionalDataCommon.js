"use strict";
/*
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2022 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 *
 * Adyen Checkout API
 *
 * The version of the OpenAPI document: v69
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResponseAdditionalDataCommon = void 0;
class ResponseAdditionalDataCommon {
}
exports.ResponseAdditionalDataCommon = ResponseAdditionalDataCommon;
(function (ResponseAdditionalDataCommon) {
    let FraudResultTypeEnum;
    (function (FraudResultTypeEnum) {
        FraudResultTypeEnum[FraudResultTypeEnum["GREEN"] = 'GREEN'] = "GREEN";
        FraudResultTypeEnum[FraudResultTypeEnum["FRAUD"] = 'FRAUD'] = "FRAUD";
    })(FraudResultTypeEnum = ResponseAdditionalDataCommon.FraudResultTypeEnum || (ResponseAdditionalDataCommon.FraudResultTypeEnum = {}));
    let MerchantAdviceCodeEnum;
    (function (MerchantAdviceCodeEnum) {
        MerchantAdviceCodeEnum[MerchantAdviceCodeEnum["_01NewAccountInformationAvailable"] = '01: New account information available'] = "_01NewAccountInformationAvailable";
        MerchantAdviceCodeEnum[MerchantAdviceCodeEnum["_02CannotApproveAtThisTimeTryAgainLater"] = '02: Cannot approve at this time, try again later'] = "_02CannotApproveAtThisTimeTryAgainLater";
        MerchantAdviceCodeEnum[MerchantAdviceCodeEnum["_03DoNotTryAgain"] = '03: Do not try again'] = "_03DoNotTryAgain";
        MerchantAdviceCodeEnum[MerchantAdviceCodeEnum["_04TokenRequirementsNotFulfilledForThisTokenType"] = '04: Token requirements not fulfilled for this token type'] = "_04TokenRequirementsNotFulfilledForThisTokenType";
        MerchantAdviceCodeEnum[MerchantAdviceCodeEnum["_21PaymentCancellation"] = '21: Payment Cancellation'] = "_21PaymentCancellation";
    })(MerchantAdviceCodeEnum = ResponseAdditionalDataCommon.MerchantAdviceCodeEnum || (ResponseAdditionalDataCommon.MerchantAdviceCodeEnum = {}));
    let RecurringProcessingModelEnum;
    (function (RecurringProcessingModelEnum) {
        RecurringProcessingModelEnum[RecurringProcessingModelEnum["CardOnFile"] = 'CardOnFile'] = "CardOnFile";
        RecurringProcessingModelEnum[RecurringProcessingModelEnum["Subscription"] = 'Subscription'] = "Subscription";
        RecurringProcessingModelEnum[RecurringProcessingModelEnum["UnscheduledCardOnFile"] = 'UnscheduledCardOnFile'] = "UnscheduledCardOnFile";
    })(RecurringProcessingModelEnum = ResponseAdditionalDataCommon.RecurringProcessingModelEnum || (ResponseAdditionalDataCommon.RecurringProcessingModelEnum = {}));
})(ResponseAdditionalDataCommon = exports.ResponseAdditionalDataCommon || (exports.ResponseAdditionalDataCommon = {}));
//# sourceMappingURL=responseAdditionalDataCommon.js.map